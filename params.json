{
  "name": "bayesAB",
  "tagline": "bayesAB: Fast Bayesian Methods for AB Testing",
  "body": "# bayesAB\r\n\r\n[![Travis-CI Build Status](https://travis-ci.org/FrankPortman/bayesAB.svg?branch=master)](https://travis-ci.org/FrankPortman/bayesAB) [![codecov](https://codecov.io/gh/FrankPortman/bayesAB/branch/master/graph/badge.svg)](https://codecov.io/gh/FrankPortman/bayesAB)\r\n\r\n\r\n## Fast Bayesian Methods for AB Testing\r\n\r\nbayesAB provides a suite of functions that allow the user to analyze A/B test\r\ndata in a Bayesian framework. bayesAB is intended to be a drop-in replacement for\r\ncommon frequentist hypothesis test such as the t-test and chi-sq test.\r\n\r\nBayesian methods provide several benefits over frequentist methods in the context of\r\nA/B tests - namely in interpretability. Instead of p-values you get direct\r\nprobabilities on whether A is better than B (and by how much). Instead of point estimates\r\nyour posterior distributions are parametrized random variables which can be summarized\r\nany number of ways. Bayesian tests are also immune to 'peeking' and are thus valid whenever \r\na test is stopped.\r\n\r\nThe general bayesAB workflow is as follows:\r\n\r\n- Decide how you want to parametrize your data (Poisson for counts of email submissions, Bernoulli for CTR on an ad, etc.)\r\n- Use our helper functions to decide on priors for your data (`?bayesTest`)\r\n- Fit a `bayesTest` object\r\n  - Optional: Use `combine` to munge together several `bayesTest` objects together for an arbitrary / non-analytical target distribution\r\n- `print`, `plot`, and `summary` to interpret your results\r\n\r\nWe also have unit tests so you know this shit is serious.\r\n\r\n## Installation\r\n\r\n```{r}\r\ninstall.packages(\"devtools\")\r\ndevtools::install_github(\"frankportman/bayesAB\", build_vignettes = TRUE)\r\n```\r\n\r\n## Usage\r\n\r\nFor a more in-depth look please check the vignettes: `browseVignettes(package = \"bayesAB\")`.\r\n\r\n```{r}\r\nlibrary(bayesAB)\r\n\r\n# Choose bernoulli test priors\r\nplotBeta(1, 1)\r\nplotBeta(2, 3)\r\n\r\n# Choose normal test priors\r\nplotNormal(6, 3)\r\nplotInvGamma(12, 4)\r\n\r\nA_binom<- rbinom(100, 1, .5)\r\nB_binom <- rbinom(100, 1, .6)\r\n\r\nA_norm <- rnorm(100, 6, 1.5)\r\nB_norm <- rnorm(100, 5, 2.5)\r\n\r\n# Fit bernoulli and normal tests\r\nAB1 <- bayesTest(A_binom, B_binom, \r\n                 priors = c('alpha' = 1, 'beta' = 1), distribution = 'bernoulli')\r\nAB2 <- bayesTest(A_norm, B_norm, \r\n                 priors = c('m0' = 5, 'k0' = 1, 's_sq0' = 3, 'v0' = 1), distribution = 'normal')\r\n\r\nprint(AB1)\r\nsummary(AB1)\r\nplot(AB1)\r\n\r\nprint(AB2)\r\nsummary(AB2)\r\nplot(AB2)\r\n\r\n# Create a new variable that is the probability multiiplied by the \r\n# normally distributed variable (expected value of something)\r\nAB3 <- combine(AB1, AB2, f = `*`, params = c('Probability', 'Mu'), newName = 'Expectation')\r\n\r\nprint(AB3)\r\nsummary(AB3)\r\nplot(AB3)\r\n\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}